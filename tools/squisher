#!/bin/bash
#
# Squish a otapackage for distribution
#

OUT_TARGET_HOST=linux-x86
VERSION=$( grep -e '^ro\.build\.version\.incremental' $OUT/system/build.prop | tail -1 | sed -n -e's/^.*=//p'  )
OTAPACKAGE=$OUT/$TARGET_PRODUCT-ota-$VERSION.zip
QUIET=-q
REPACK=$OUT/repack.d
REPACKOTA=$REPACK/ota

CORES=$( cat /proc/cpuinfo | grep -c processor )

. mensajes.sh

# VerificaciÃ³n de entorno de desarrollo operativo
if [ -z "$OUT" -o ! -d "$OUT" ]; then
  msgErr "$0 solo funciona con un entorno completo de desarrollo. $OUT debe existir."
  exit 1
fi

# Se verifica que existe el fichero inicial.
if [ ! -f "$OTAPACKAGE" ]; then
  msgErr "$OTAPACKAGE no existe!"
  exit 1
fi

# Elimina cualquier directorio de un trabajo antiguo
clear
msgInfo "Limpiando el entorno..."
rm -rf $REPACK
mkdir -p $REPACK

# Descomprime el otapackage y ejecuta opticharge en todos los apks
mkdir $REPACKOTA

cd $REPACKOTA
msgStatus "Desempaquetando $OTAPACKAGE..."
unzip $QUIET $OTAPACKAGE

# Se introduce recovery CWM
rm -rf $REPACKOTA/recovery
cp $OUT/recovery.img $REPACKOTA

# Se introduce updater-script propio
cp $ANDROID_BUILD_TOP/device/geeksphone/zero/prebuilt/updater-script $REPACKOTA/META-INF/com/google/android/updater-script

# Se procede a eliminar apps que no se desean en Stock
rm $REPACKOTA/system/app/Development.*
rm $REPACKOTA/system/app/Term.*
rm $REPACKOTA/system/app/SpareParts.*
rm $REPACKOTA/system/app/Provision.*
rm $REPACKOTA/system/app/QuickSearchBox.*

OUTFILE=$OUT/update.zip

cd $REPACKOTA

msgStatus "Comprimiendo ROM en update.zip"
zip $QUIET -r -9 $REPACK/update.zip . 

$ANDROID_BUILD_TOP/vendor/geeksphone/zero/tools/firmar.sh $REPACK/update.zip $OUTFILE
if [ "$?" -ne 0 ]; then
    msgErr "Error al obtener el fichero firmado $OUTFILE"
    exit 1
fi

msgStatus "Generando imgs para fastboot..."
mkdir $OUT/update-fastboot
cd $OUT

# Se procede a eliminar apps que no se desean en Stock
rm system/app/Development.*
rm system/app/Term.*
rm system/app/SpareParts.*
rm system/app/Provision.*
rm system/app/QuickSearchBox.*

# Se procede a generar el System y recopilar el resto de imgs
$OUT/../../../host/linux-x86/bin/mkyaffs2image -f system update-fastboot/system.img
cp $OUT/recovery.img $OUT/update-fastboot/recovery.img
cp $OUT/boot.img $OUT/update-fastboot/boot.img
cd $OUT/update-fastboot

msgStatus "Empaquetando en update-fastboot.zip..."
zip $QUIET -r -9 $OUT/update-fastboot.zip .

# Crear md5 para update-fastboot
cd $OUT
md5sum update-fastboot.zip > update-fastboot.zip.md5sum

msgStatus "Limpiando el entorno..."
rm -rf $REPACK
rm -rf $OUT/update-fastboot

exit 0
